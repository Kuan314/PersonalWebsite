{"version":3,"file":"static/js/4.f2d4b754.chunk.js","mappings":"iKAqEA,UAlEkB,WAChB,OAA0BA,EAAAA,EAAAA,UAAS,IAAG,eAA/BC,EAAK,KAAEC,EAAQ,KACtB,GAAkCF,EAAAA,EAAAA,WAAS,GAAM,eAA1CG,EAAS,KAAEC,EAAY,MAE9BC,EAAAA,EAAAA,YAAU,WACR,IAAIC,EAAa,KAYjB,OAVGH,GAAaF,EAAQ,IACtBK,EAAaC,aAAY,WACrBL,GAAS,SAAAM,GAAS,OAAIA,EAAU,CAAC,GACnC,GAAG,MAGM,IAAVP,GACDG,GAAa,GAGR,WACLK,cAAcH,EAChB,CAEF,GAAG,CAACH,EAAWF,IAEf,IAAMS,EAAY,SAACC,GACjBT,GAAS,SAAAM,GAAS,OAAIA,EAAYG,CAAG,GACvC,EAEMC,EAAc,SAACD,GACnBT,GAAS,SAAAM,GAAS,OAAIA,EAAYG,CAAG,GACvC,EAMME,EAAMC,KAAKC,MAAMd,EAAQ,IACzBe,EAAMf,EAAQ,GAEpB,OACE,iBAAKgB,UAAU,8CAA6C,WAC1D,eAAIA,UAAU,WAAU,yBACxB,iBAAKA,UAAU,yCAAwC,WACrD,iBAAKA,UAAU,MAAK,WAClB,SAAC,MAAgB,CAACC,QAAS,kBAAMR,EAAU,GAAG,EAAEO,UAAWd,EAAY,YAAc,KACpFU,GAAO,GAAKA,EAAM,IAAMA,EAAIM,YAC7B,SAAC,MAAkB,CAACD,QAAS,kBAAMN,EAAY,GAAG,EAAEK,UAAWd,EAAY,YAAc,QACrF,KAEN,iBAAKc,UAAU,MAAK,WAClB,SAAC,MAAgB,CAACC,QAAS,kBAAMR,EAAU,EAAE,EAAEO,UAAWd,EAAY,YAAc,KACnFa,GAAO,GAAKA,EAAM,IAAMA,EAAIG,YAC7B,SAAC,MAAkB,CAACD,QAAS,kBAAMN,EAAY,EAAE,EAAEK,UAAWd,EAAY,YAAc,YAI5F,mBACEc,UAAU,wGACVC,QA1Bc,WAClBd,GAAcD,EAChB,EAwB2B,SAEpBA,EAAY,QAAU,YAK/B,C","sources":["miniChallenges/CountDown.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { AiOutlineCaretUp, AiOutlineCaretDown } from \"react-icons/ai\";\n\nconst CountDown = () => {\n  const [count, setCount] = useState(65);\n  const [isRunning, setIsRunning] = useState(false);\n\n  useEffect(() => {\n    let intervalId = null;\n    // Count down\n    if(isRunning && count > 0) {\n      intervalId = setInterval(() => {\n          setCount(prevCount => prevCount-1);\n        }, 1000);\n    }\n\n    if(count === 0) {\n      setIsRunning(false);\n    }\n\n    return () => {\n      clearInterval(intervalId);\n    }\n\n  }, [isRunning, count]);\n\n  const handleAdd = (val) => {\n    setCount(prevCount => prevCount + val);\n  };\n\n  const handleMinus = (val) => {\n    setCount(prevCount => prevCount - val);\n  };\n\n  const handleStart = () => {\n    setIsRunning(!isRunning);\n  };\n\n  const min = Math.floor(count / 60);\n  const sec = count % 60;\n\n  return (\n    <div className=\"flex flex-col items-center text-textPrimary\">\n      <h1 className=\"text-5xl\">Count Down</h1>\n      <div className=\"flex items-center text-3xl select-none\">\n        <div className=\"p-3\">\n          <AiOutlineCaretUp onClick={() => handleAdd(60)} className={isRunning ? \"invisible\" : \"\"} />\n          {min >= 10 ? min : \"0\" + min.toString()}\n          <AiOutlineCaretDown onClick={() => handleMinus(60)} className={isRunning ? \"invisible\" : \"\"} />\n        </div>\n        :\n        <div className=\"p-3\">\n          <AiOutlineCaretUp onClick={() => handleAdd(1)} className={isRunning ? \"invisible\" : \"\"} />\n          {sec >= 10 ? sec : \"0\" + sec.toString()}\n          <AiOutlineCaretDown onClick={() => handleMinus(1)} className={isRunning ? \"invisible\" : \"\"} />\n        </div>\n      </div>\n\n      <button \n        className=\"w-20 p-2 m-2 text-xl border-textSecondary border-2 rounded-md hover:bg-textSecondary hover:text-white\"\n        onClick={handleStart}\n      >\n        {isRunning ? \"Pause\" : \"Start\"}\n      </button>\n\n    </div>\n  )\n}\n\nexport default CountDown;"],"names":["useState","count","setCount","isRunning","setIsRunning","useEffect","intervalId","setInterval","prevCount","clearInterval","handleAdd","val","handleMinus","min","Math","floor","sec","className","onClick","toString"],"sourceRoot":""}