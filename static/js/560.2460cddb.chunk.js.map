{"version":3,"file":"static/js/560.2460cddb.chunk.js","mappings":"4KAGA,MAqGA,EArGgBA,KAEf,MAAOC,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,CAC5C,CACCC,OAAQ,OAET,CACCA,OAAQ,SAET,CACCA,OAAQ,WAIHC,EAAWC,IAAgBH,EAAAA,EAAAA,UAAS,KACpCI,EAAUC,IAAeL,EAAAA,EAAAA,WAAS,IAClCM,EAAaC,IAAkBP,EAAAA,EAAAA,UAAS,GAmC/C,OACCQ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAqBC,SAAA,EACnCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC7BC,EAAAA,EAAAA,KAACC,EAAAA,MAAK,CACLC,kBAAqBT,EACrBU,YAAaR,EACbS,KAAMjB,EACNkB,iBAAkB,CAAC,UAAW,WAC9BC,WAAY,CAAC,WACbC,eAdqBC,KACxBd,GAAY,GACZe,MAAM,iBAAmBtB,EAAWQ,GAAaL,OAAO,KAetDU,EAAAA,EAAAA,KAAA,UAAQU,KAAK,SAASC,QA7CDC,KACvBhB,EAAeiB,KAAKC,MAAMD,KAAKE,SAAW5B,EAAW6B,SACrDtB,GAAY,EAAK,EA2CiCI,UAAU,kEAAiEC,SAAC,aAK7HF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kCAAiCC,SAAA,EAC/CC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,sEAAqEC,SAClFZ,EAAW8B,KAAK1B,IAEfS,EAAAA,EAAAA,KAAAkB,EAAAA,SAAA,CAAAnB,UACAF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4CAA2CC,SAAA,EACzDC,EAAAA,EAAAA,KAAA,MAAAD,SACER,EAAUD,UAGZU,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,UACpBC,EAAAA,EAAAA,KAAA,UAAQU,KAAK,SAASC,QAASA,IAtCPQ,KAC/B,MAAMC,EAAoBjC,EAAWkC,QAAOC,GAASA,IAAUH,IAC/D/B,EAAcgC,EAAkB,EAoCYG,CAAuBhC,GAAWQ,UACtEC,EAAAA,EAAAA,KAAA,OAAKwB,MAAM,6BAA6BC,KAAK,OAAOC,QAAQ,YAAYC,YAAa,IAAKC,OAAO,eAAe9B,UAAU,UAASC,UAClIC,EAAAA,EAAAA,KAAA,QAAM6B,cAAc,QAAQC,eAAe,QAAQC,EAAE,wFAU5DlC,EAAAA,EAAAA,MAAA,QAAMmC,SApEmBC,IACzB,GAAG1C,EAAU2C,MAAM,WAAW,CAC5B,MAAMd,EAAoBjC,EAC7BiC,EAAkBe,KACjB,CACC7C,OAAQC,IAGV6C,QAAQC,IAAIjB,GACZhC,EAAcgC,EACb,MACEX,MAAM,4BAGRjB,EAAa,IACfyC,EAAMK,gBAAgB,EAqDgBxC,UAAU,OAAMC,SAAA,EACnDC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,yBAAyBY,KAAK,OAAOY,MAAO/B,EAAWgD,SAAUC,GAAKhD,EAAagD,EAAEC,OAAOnB,UAC7GtB,EAAAA,EAAAA,KAAA,UAAQF,UAAU,oEAAmEC,SAAC,mBAInF,C","sources":["miniChallenges/Wheel.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Wheel } from \"react-custom-roulette\";\r\n\r\nconst Spinner = () => {\r\n\r\n\tconst [selections, setSelections] = useState([\r\n\t\t{\r\n\t\t\toption: \"Eat\"\r\n\t\t}, \r\n\t\t{\r\n\t\t\toption: \"Sleep\"\r\n\t\t}, \r\n\t\t{\r\n\t\t\toption: \"Code\"\r\n\t\t},\r\n\t]);\r\n\r\n\tconst [selection, setSelection] = useState(\"\");\r\n\tconst [mustSpin, setMustSpin] = useState(false);\r\n\tconst [priceNumber, setPriceNumber] = useState(0);\r\n\r\n\tconst handleSpinClick = () => {\r\n\t\tsetPriceNumber(Math.floor(Math.random() * selections.length))\r\n\t\tsetMustSpin(true);\r\n\t}\r\n\r\n\tconst handleAddSelection = (event) => {\r\n    if(selection.match(/^[\\S]+$/)){\r\n      const updatedSelections = selections;\r\n\t\t\tupdatedSelections.push(\r\n\t\t\t\t{\r\n\t\t\t\t\toption: selection\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\tconsole.log(updatedSelections)\r\n\t\t\tsetSelections(updatedSelections);\r\n    } else {\r\n      alert(\"Your input is not valid!\");\r\n    }\r\n\r\n    setSelection(\"\");\r\n\t\tevent.preventDefault();\r\n\t}\r\n\r\n\tconst handleDeletedSelection = (deletedSelection) => {\r\n\t\tconst updatedSelections = selections.filter(value => value !== deletedSelection);\r\n\t\tsetSelections(updatedSelections);\r\n\t}\r\n\r\n\tconst handleFinishSpin = () => {\r\n\t\tsetMustSpin(false);\r\n\t\talert(\"The result is \" + selections[priceNumber].option);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"flex justify-center\">\r\n\t\t\t<div className=\"flex flex-col\">\r\n\t\t\t\t<Wheel\r\n\t\t\t\t\tmustStartSpinning = {mustSpin}\r\n\t\t\t\t\tprizeNumber={priceNumber}\r\n\t\t\t\t\tdata={selections}\r\n\t\t\t\t\tbackgroundColors={['#6D7E85', '#243638']}\r\n\t\t\t\t\ttextColors={['#FFFFFF']}\r\n\t\t\t\t\tonStopSpinning={handleFinishSpin}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<button type=\"button\" onClick={handleSpinClick} className=\"bg-textSecondary text-textPrimary px-1 w-20 rounded self-center\">\r\n\t\t\t\t\tSpin\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t<div className=\"flex flex-col items-center px-4\">\r\n\t\t\t\t<div className=\"h-80 w-72 bg-textPrimary rounded text-textSecondary overflow-y-auto\">\r\n\t\t\t\t\t{selections.map((selection) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<div className=\"px-2 py-0.5 flex flex-row justify-between\">\r\n\t\t\t\t\t\t\t\t<h1>\r\n\t\t\t\t\t\t\t\t\t{selection.option}\r\n\t\t\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div className=\"flex\">\r\n\t\t\t\t\t\t\t\t\t<button type=\"button\" onClick={() => handleDeletedSelection(selection)}>\r\n\t\t\t\t\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-5 h-5\">\r\n\t\t\t\t\t\t\t\t\t\t\t<path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9.75 9.75l4.5 4.5m0-4.5l-4.5 4.5M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<form onSubmit={handleAddSelection} className=\"pt-4\">\r\n\t\t\t\t\t<input className=\"px-1 border rounded-md\" type=\"text\" value={selection} onChange={e => setSelection(e.target.value)} />\r\n\t\t\t\t\t<button className=\"px-1 mx-2 border-textPrimary text-textPrimary rounded-md border-2\">Submit</button>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t\t\t\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Spinner;"],"names":["Spinner","selections","setSelections","useState","option","selection","setSelection","mustSpin","setMustSpin","priceNumber","setPriceNumber","_jsxs","className","children","_jsx","Wheel","mustStartSpinning","prizeNumber","data","backgroundColors","textColors","onStopSpinning","handleFinishSpin","alert","type","onClick","handleSpinClick","Math","floor","random","length","map","_Fragment","deletedSelection","updatedSelections","filter","value","handleDeletedSelection","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","onSubmit","event","match","push","console","log","preventDefault","onChange","e","target"],"sourceRoot":""}