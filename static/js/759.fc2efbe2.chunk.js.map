{"version":3,"file":"static/js/759.fc2efbe2.chunk.js","mappings":"qKAwGA,UArGgB,WAEf,OAAoCA,EAAAA,EAAAA,UAAS,CAC5C,CACCC,OAAQ,OAET,CACCA,OAAQ,SAET,CACCA,OAAQ,UAER,eAVKC,EAAU,KAAEC,EAAa,KAYhC,GAAkCH,EAAAA,EAAAA,UAAS,IAAG,eAAvCI,EAAS,KAAEC,EAAY,KAC9B,GAAgCL,EAAAA,EAAAA,WAAS,GAAM,eAAxCM,EAAQ,KAAEC,EAAW,KAC5B,GAAsCP,EAAAA,EAAAA,UAAS,GAAE,eAA1CQ,EAAW,KAAEC,EAAc,KAmClC,OACC,iBAAKC,UAAU,sBAAqB,WACnC,iBAAKA,UAAU,gBAAe,WAC7B,SAAC,EAAAC,MAAK,CACLC,kBAAqBN,EACrBO,YAAaL,EACbM,KAAMZ,EACNa,iBAAkB,CAAC,UAAW,WAC9BC,WAAY,CAAC,WACbC,eAdqB,WACxBV,GAAY,GACZW,MAAM,iBAAmBhB,EAAWM,GAAaP,OAClD,KAcG,mBAAQkB,KAAK,SAASC,QA7CD,WACvBX,EAAeY,KAAKC,MAAMD,KAAKE,SAAWrB,EAAWsB,SACrDjB,GAAY,EACb,EA0CmDG,UAAU,kEAAiE,sBAK5H,iBAAKA,UAAU,kCAAiC,WAC/C,gBAAKA,UAAU,sEAAqE,SAClFR,EAAWuB,KAAI,SAACrB,GAChB,OACC,+BACA,iBAAKM,UAAU,4CAA2C,WACzD,wBACEN,EAAUH,UAGZ,gBAAKS,UAAU,OAAM,UACpB,mBAAQS,KAAK,SAASC,QAAS,kBAtCR,SAACM,GAC/B,IAAMC,EAAoBzB,EAAW0B,QAAO,SAAAC,GAAK,OAAIA,IAAUH,CAAgB,IAC/EvB,EAAcwB,EACf,CAmC6CG,CAAuB1B,EAAU,EAAC,UACtE,gBAAK2B,MAAM,6BAA6BC,KAAK,OAAOC,QAAQ,YAAYC,YAAa,IAAKC,OAAO,eAAezB,UAAU,UAAS,UAClI,iBAAM0B,cAAc,QAAQC,eAAe,QAAQC,EAAE,kFAO3D,OAGD,kBAAMC,SApEkB,SAACC,GACzB,GAAGpC,EAAUqC,MAAM,WAAW,CAC5B,IAAMd,EAAoBzB,EAC7ByB,EAAkBe,KACjB,CACCzC,OAAQG,IAGVuC,QAAQC,IAAIjB,GACZxB,EAAcwB,EACb,MACET,MAAM,4BAGRb,EAAa,IACfmC,EAAMK,gBACP,EAoDuCnC,UAAU,OAAM,WACnD,kBAAOA,UAAU,yBAAyBS,KAAK,OAAOU,MAAOzB,EAAW0C,SAAU,SAAAC,GAAC,OAAI1C,EAAa0C,EAAEC,OAAOnB,MAAM,KACnH,mBAAQnB,UAAU,oEAAmE,4BAM1F,C","sources":["miniChallenges/Wheel.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Wheel } from \"react-custom-roulette\";\n\nconst Spinner = () => {\n\n\tconst [selections, setSelections] = useState([\n\t\t{\n\t\t\toption: \"Eat\"\n\t\t}, \n\t\t{\n\t\t\toption: \"Sleep\"\n\t\t}, \n\t\t{\n\t\t\toption: \"Code\"\n\t\t},\n\t]);\n\n\tconst [selection, setSelection] = useState(\"\");\n\tconst [mustSpin, setMustSpin] = useState(false);\n\tconst [priceNumber, setPriceNumber] = useState(0);\n\n\tconst handleSpinClick = () => {\n\t\tsetPriceNumber(Math.floor(Math.random() * selections.length))\n\t\tsetMustSpin(true);\n\t}\n\n\tconst handleAddSelection = (event) => {\n    if(selection.match(/^[\\S]+$/)){\n      const updatedSelections = selections;\n\t\t\tupdatedSelections.push(\n\t\t\t\t{\n\t\t\t\t\toption: selection\n\t\t\t\t}\n\t\t\t);\n\t\t\tconsole.log(updatedSelections)\n\t\t\tsetSelections(updatedSelections);\n    } else {\n      alert(\"Your input is not valid!\");\n    }\n\n    setSelection(\"\");\n\t\tevent.preventDefault();\n\t}\n\n\tconst handleDeletedSelection = (deletedSelection) => {\n\t\tconst updatedSelections = selections.filter(value => value !== deletedSelection);\n\t\tsetSelections(updatedSelections);\n\t}\n\n\tconst handleFinishSpin = () => {\n\t\tsetMustSpin(false);\n\t\talert(\"The result is \" + selections[priceNumber].option);\n\t}\n\n\treturn (\n\t\t<div className=\"flex justify-center\">\n\t\t\t<div className=\"flex flex-col\">\n\t\t\t\t<Wheel\n\t\t\t\t\tmustStartSpinning = {mustSpin}\n\t\t\t\t\tprizeNumber={priceNumber}\n\t\t\t\t\tdata={selections}\n\t\t\t\t\tbackgroundColors={['#6D7E85', '#243638']}\n\t\t\t\t\ttextColors={['#FFFFFF']}\n\t\t\t\t\tonStopSpinning={handleFinishSpin}\n\t\t\t\t/>\n\n\t\t\t\t<button type=\"button\" onClick={handleSpinClick} className=\"bg-textSecondary text-textPrimary px-1 w-20 rounded self-center\">\n\t\t\t\t\tSpin\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div className=\"flex flex-col items-center px-4\">\n\t\t\t\t<div className=\"h-80 w-72 bg-textPrimary rounded text-textSecondary overflow-y-auto\">\n\t\t\t\t\t{selections.map((selection) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<div className=\"px-2 py-0.5 flex flex-row justify-between\">\n\t\t\t\t\t\t\t\t<h1>\n\t\t\t\t\t\t\t\t\t{selection.option}\n\t\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div className=\"flex\">\n\t\t\t\t\t\t\t\t\t<button type=\"button\" onClick={() => handleDeletedSelection(selection)}>\n\t\t\t\t\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-5 h-5\">\n\t\t\t\t\t\t\t\t\t\t\t<path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9.75 9.75l4.5 4.5m0-4.5l-4.5 4.5M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\n\t\t\t\t<form onSubmit={handleAddSelection} className=\"pt-4\">\n\t\t\t\t\t<input className=\"px-1 border rounded-md\" type=\"text\" value={selection} onChange={e => setSelection(e.target.value)} />\n\t\t\t\t\t<button className=\"px-1 mx-2 border-textPrimary text-textPrimary rounded-md border-2\">Submit</button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t\t\t\n\t\t</div>\n\t)\n}\n\nexport default Spinner;"],"names":["useState","option","selections","setSelections","selection","setSelection","mustSpin","setMustSpin","priceNumber","setPriceNumber","className","Wheel","mustStartSpinning","prizeNumber","data","backgroundColors","textColors","onStopSpinning","alert","type","onClick","Math","floor","random","length","map","deletedSelection","updatedSelections","filter","value","handleDeletedSelection","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","onSubmit","event","match","push","console","log","preventDefault","onChange","e","target"],"sourceRoot":""}