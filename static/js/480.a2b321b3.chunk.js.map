{"version":3,"file":"static/js/480.a2b321b3.chunk.js","mappings":"4KAGA,MAkEA,EAlEkBA,KAChB,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,IAE3CG,EAAAA,EAAAA,YAAU,KACR,IAAIC,EAAa,KAYjB,OAVGH,GAAaH,EAAQ,IACtBM,EAAaC,aAAY,KACrBN,GAASO,GAAaA,EAAU,GAAE,GACjC,MAGM,IAAVR,GACDI,GAAa,GAGR,KACLK,cAAcH,EAAW,CAC1B,GAEA,CAACH,EAAWH,IAEf,MAAMU,EAAaC,IACjBV,GAASO,GAAaA,EAAYG,GAAI,EAGlCC,EAAeD,IACnBV,GAASO,GAAaA,EAAYG,GAAI,EAOlCE,EAAMC,KAAKC,MAAMf,EAAQ,IACzBgB,EAAMhB,EAAQ,GAEpB,OACEiB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8CAA6CC,SAAA,EAC1DC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,WAAUC,SAAC,gBACzBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yCAAwCC,SAAA,EACrDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKC,SAAA,EAClBC,EAAAA,EAAAA,KAACC,EAAAA,IAAgB,CAACC,QAASA,IAAMZ,EAAU,IAAKQ,UAAWf,EAAY,YAAc,KACpFU,GAAO,GAAKA,EAAM,IAAMA,EAAIU,YAC7BH,EAAAA,EAAAA,KAACI,EAAAA,IAAkB,CAACF,QAASA,IAAMV,EAAY,IAAKM,UAAWf,EAAY,YAAc,QACrF,KAENc,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKC,SAAA,EAClBC,EAAAA,EAAAA,KAACC,EAAAA,IAAgB,CAACC,QAASA,IAAMZ,EAAU,GAAIQ,UAAWf,EAAY,YAAc,KACnFa,GAAO,GAAKA,EAAM,IAAMA,EAAIO,YAC7BH,EAAAA,EAAAA,KAACI,EAAAA,IAAkB,CAACF,QAASA,IAAMV,EAAY,GAAIM,UAAWf,EAAY,YAAc,YAI5FiB,EAAAA,EAAAA,KAAA,UACEF,UAAU,wGACVI,QA1BcG,KAClBrB,GAAcD,EAAU,EAyBCgB,SAEpBhB,EAAY,QAAU,YAGrB,C","sources":["miniChallenges/CountDown.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { AiOutlineCaretUp, AiOutlineCaretDown } from \"react-icons/ai\";\r\n\r\nconst CountDown = () => {\r\n  const [count, setCount] = useState(65);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let intervalId = null;\r\n    // Count down\r\n    if(isRunning && count > 0) {\r\n      intervalId = setInterval(() => {\r\n          setCount(prevCount => prevCount-1);\r\n        }, 1000);\r\n    }\r\n\r\n    if(count === 0) {\r\n      setIsRunning(false);\r\n    }\r\n\r\n    return () => {\r\n      clearInterval(intervalId);\r\n    }\r\n\r\n  }, [isRunning, count]);\r\n\r\n  const handleAdd = (val) => {\r\n    setCount(prevCount => prevCount + val);\r\n  };\r\n\r\n  const handleMinus = (val) => {\r\n    setCount(prevCount => prevCount - val);\r\n  };\r\n\r\n  const handleStart = () => {\r\n    setIsRunning(!isRunning);\r\n  };\r\n\r\n  const min = Math.floor(count / 60);\r\n  const sec = count % 60;\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center text-textPrimary\">\r\n      <h1 className=\"text-5xl\">Count Down</h1>\r\n      <div className=\"flex items-center text-3xl select-none\">\r\n        <div className=\"p-3\">\r\n          <AiOutlineCaretUp onClick={() => handleAdd(60)} className={isRunning ? \"invisible\" : \"\"} />\r\n          {min >= 10 ? min : \"0\" + min.toString()}\r\n          <AiOutlineCaretDown onClick={() => handleMinus(60)} className={isRunning ? \"invisible\" : \"\"} />\r\n        </div>\r\n        :\r\n        <div className=\"p-3\">\r\n          <AiOutlineCaretUp onClick={() => handleAdd(1)} className={isRunning ? \"invisible\" : \"\"} />\r\n          {sec >= 10 ? sec : \"0\" + sec.toString()}\r\n          <AiOutlineCaretDown onClick={() => handleMinus(1)} className={isRunning ? \"invisible\" : \"\"} />\r\n        </div>\r\n      </div>\r\n\r\n      <button \r\n        className=\"w-20 p-2 m-2 text-xl border-textSecondary border-2 rounded-md hover:bg-textSecondary hover:text-white\"\r\n        onClick={handleStart}\r\n      >\r\n        {isRunning ? \"Pause\" : \"Start\"}\r\n      </button>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CountDown;"],"names":["CountDown","count","setCount","useState","isRunning","setIsRunning","useEffect","intervalId","setInterval","prevCount","clearInterval","handleAdd","val","handleMinus","min","Math","floor","sec","_jsxs","className","children","_jsx","AiOutlineCaretUp","onClick","toString","AiOutlineCaretDown","handleStart"],"sourceRoot":""}